plugins {
    id "java"
    id "java-library"
    id "maven-publish"
    id "signing"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = "io.github.lxgaming"
archivesBaseName = "overwolfgameevents"
version = "1.0.1"

configurations {
}

repositories {
    mavenCentral()
}

dependencies {
    api("net.java.dev.jna:jna:5.9.0")
    api("org.checkerframework:checker-qual:3.21.0")
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    failOnError = false
}

processResources {
    from("LICENSE")
    rename("LICENSE", "LICENSE-${archivesBaseName}")
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            groupId group
            artifactId archivesBaseName
            version version
            pom {
                name = "OverwolfGameEvents"
                description = "Unofficial Overwolf Game Events SDK Bindings for Java"
                url = "https://github.com/LXGaming/OverwolfGameEvents"
                developers {
                    developer {
                        id = "lxgaming"
                        name = "LXGaming"
                    }
                }
                issueManagement {
                    system = "GitHub Issues"
                    url = "https://github.com/LXGaming/OverwolfGameEvents/issues"
                }
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                scm {
                    connection = "scm:git:https://github.com/LXGaming/OverwolfGameEvents.git"
                    developerConnection = "scm:git:https://github.com/LXGaming/OverwolfGameEvents.git"
                    url = "https://github.com/LXGaming/OverwolfGameEvents"
                }
            }
        }
    }
    repositories {
        if (project.hasProperty("sonatypeUsername") && project.hasProperty("sonatypePassword")) {
            maven {
                name = "sonatype"
                url = version.contains("-SNAPSHOT") ? "https://s01.oss.sonatype.org/content/repositories/snapshots" : "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"
                credentials {
                    username project.property("sonatypeUsername")
                    password project.property("sonatypePassword")
                }
            }
        }
    }
}

signing {
    if (project.hasProperty("signingKey") && project.hasProperty("signingPassword")) {
        useInMemoryPgpKeys(project.property("signingKey"), project.property("signingPassword"))
    }

    sign publishing.publications
}